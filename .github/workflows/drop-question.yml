# Drop a specific question based on its ID

name: Drop Question

concurrency: gmat-database

on:
  workflow_dispatch:
    inputs:
      question_id:
        description: "ID of the question to be removed from the database"
        required: true
        type: string

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  deployments: write
  id-token: write

jobs:
  main:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    steps:
      - name: Setup repo
        uses: actions/checkout@v3

      - name: Setup Deno
        # uses: denoland/setup-deno@v1
        uses: denoland/setup-deno@9db7f66e8e16b5699a514448ce994936c63f0d54
        with:
          deno-version: v1.x

      - name: Download artifact
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          name: github-pages
          path: output
          workflow_conclusion: success
          search_artifacts: true
          check_artifacts: true

      - name: Extract pervious artifact
        run: tar --skip-old-files -xf artifact.tar && rm artifact.tar
        working-directory: output

      - name: View current database
        run: ls -R
        working-directory: output

      - name: Run linter
        run: deno lint

      - name: Set environment variable
        run: echo "QUESTION_ID=${{ github.event.inputs.question_id }}" >> $GITHUB_ENV

      - name: Run drop-question
        run: deno run --allow-all ./drop-question.ts >> $GITHUB_STEP_SUMMARY

      # Must run in the same jobs otherwise previous output won't be kept
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: "./output"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
